// <auto-generated />
using System;
using GestionTurnosUTN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionTurnosUTN.Data.Migrations
{
    [DbContext(typeof(GestionTurnosUTNDomainContext))]
    partial class GestionTurnosUTNDomainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Interval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExplainDesactivation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("Intervals", (string)null);
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePost")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("News", (string)null);
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("Notes", (string)null);
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstitutionalEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Turn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAttended")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IntervalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IntervalId");

                    b.HasIndex("NoteId");

                    b.HasIndex("StudentId");

                    b.ToTable("Turns", (string)null);
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Worker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("IntervalNote", b =>
                {
                    b.Property<Guid>("IntervalsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IntervalsId", "NotesId");

                    b.HasIndex("NotesId");

                    b.ToTable("IntervalNote");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Interval", b =>
                {
                    b.HasOne("GestionTurnosUTN.Domain.Entities.Worker", "Worker")
                        .WithMany("Intervals")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.News", b =>
                {
                    b.HasOne("GestionTurnosUTN.Domain.Entities.Worker", "Worker")
                        .WithMany("News")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Note", b =>
                {
                    b.HasOne("GestionTurnosUTN.Domain.Entities.Worker", "Worker")
                        .WithMany("Notes")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Turn", b =>
                {
                    b.HasOne("GestionTurnosUTN.Domain.Entities.Interval", "Interval")
                        .WithMany("Turns")
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTurnosUTN.Domain.Entities.Note", "Note")
                        .WithMany("Turns")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTurnosUTN.Domain.Entities.Student", "Student")
                        .WithMany("Turns")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interval");

                    b.Navigation("Note");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IntervalNote", b =>
                {
                    b.HasOne("GestionTurnosUTN.Domain.Entities.Interval", null)
                        .WithMany()
                        .HasForeignKey("IntervalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTurnosUTN.Domain.Entities.Note", null)
                        .WithMany()
                        .HasForeignKey("NotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Interval", b =>
                {
                    b.Navigation("Turns");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Note", b =>
                {
                    b.Navigation("Turns");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Student", b =>
                {
                    b.Navigation("Turns");
                });

            modelBuilder.Entity("GestionTurnosUTN.Domain.Entities.Worker", b =>
                {
                    b.Navigation("Intervals");

                    b.Navigation("News");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
